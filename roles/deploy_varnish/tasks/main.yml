---
- name: Make sure namespace wordpress doesn't exist
  command: "kubectl get namespace wordpress"
  register: _get_namespace
  ignore_errors: true
  no_log: true

- name: Setting namespace if exists
  set_fact:
    get_namespace: "{{ _get_namespace['stdout'] }}"
  when: _get_namespace.rc == 0

- name: Create namespace wordpress
  command: "kubectl create namespace wordpress"
  when: get_namespace is not defined

- name: Make sure ConfigMap varnish doesn't exist
  command: "kubectl -n wordpress get configmap varnish-vcl"
  register: _get_configmap
  ignore_errors: true
  no_log: true

- name: Setting ConfigMap if exists
  set_fact:
    get_configmap: "{{ _get_configmap['stdout'] }}"
  when: _get_configmap.rc == 0

- name: Create ConfigMap for default.vcl file
  command: "kubectl -n wordpress create configmap varnish-vcl --from-file={{ role_path }}/files/default.vcl"
  when: get_configmap is not defined

- name: Deploy varnish using kubectl
  command: "kubectl apply -f -"
  args:
    stdin: "{{ item }}"
  with_items:
    - "{{ lookup('template', 'varnish.yml.j2') }}"
    - "{{ lookup('template', 'varnish-service.yml.j2') }}"
